import numpy as np 
 import pandas as pd
 import os
 for dirname, _, filenames in os.walk('/kaggle/input'):
     for filename in filenames:
         print(os.path.join(dirname, filename))
 Mastan =pd.read_csv("C:/Users/sheik/Downloads/student_performance_prediction.csv")
 print("Dataset Head:\n", Mastan.head())
 print("\nDataset Info:\n")
 Mastan.info()
 print("\nMissing Values:\n", Mastan.isnull().sum())
 print("\nSummary Statistics:\n", Mastan.describe())
 import matplotlib.pyplot as plt
 import seaborn as sns
 plt.figure(figsize=(10, 6))
 sns.heatmap(Mastan.isnull(), cbar=False, cmap='viridis')
 plt.title('Missing Data Heatmap', fontsize=16)
 plt.show()
 
 missing_counts = Mastan.isnull().sum()
 missing_counts = missing_counts[missing_counts > 0]
 
 plt.figure(figsize=(8, 5))
 missing_counts.sort_values(ascending=False).plot(kind='bar', color='coral', edgecolor='black')
 plt.title('Missing Data Count by Column', fontsize=14)
 plt.ylabel('Count of Missing Values')
 plt.xticks(rotation=45)
 plt.show()
 Mastan['Study Hours per Week'].fillna(Mastan['Study Hours per Week'].median(), inplace=True)
 Mastan['Attendance Rate'].fillna(Mastan['Attendance Rate'].median(), inplace=True)
 Mastan['Previous Grades'].fillna(Mastan['Previous Grades'].median(), inplace=True)
 
 
 Mastan['Participation in Extracurricular Activities'].fillna(Mastan['Participation in Extracurricular Activities'].mode()[0], inplace=True)
 Mastan['Parent Education Level'].fillna(Mastan['Parent Education Level'].mode()[0], inplace=True)
 
 
 Mastan.dropna(inplace=True)
 from sklearn.preprocessing import LabelEncoder, StandardScaler
 
 
 label_encoder = LabelEncoder()
 Mastan['Participation in Extracurricular Activities'] = label_encoder.fit_transform(Mastan['Participation in Extracurricular Activities'])
 Mastan['Parent Education Level'] = label_encoder.fit_transform(Mastan['Parent Education Level'])
 Mastan['Passed'] = label_encoder.fit_transform(Mastan['Passed'])
 
 
 scaler = StandardScaler()
 Mastan[['Study Hours per Week', 'Attendance Rate', 'Previous Grades']] = scaler.fit_transform(Mastan[['Study Hours per Week', 'Attendance Rate', 'Previous Grades']])
 
 
 
 Mastan.head()
 plt.figure(figsize=(8, 6))
 sns.countplot(x='Passed', data=Mastan, palette='coolwarm')
 plt.title('Distribution of Passed/Failed')
 plt.xlabel('Passed')
 plt.ylabel('Count')
 plt.show()
 Mastan['Commitment Score'] = Mastan['Study Hours per Week'] * Mastan['Attendance Rate']
 from sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score
 from sklearn.svm import SVC 
 from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
 
 
 X = Mastan.drop(columns=['Student ID','Passed'])  
 y = Mastan['Passed']  
 
 
 scaler = StandardScaler()
 X = scaler.fit_transform(X)
 
 
 X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
 param_grid = {
     'C': [0.1, 1, 10],             
     'kernel': ['linear', 'rbf'],  
     'gamma': ['scale', 'auto'],    
 }
 
 grid_search = GridSearchCV(
     SVC(random_state=42, class_weight='balanced'),  
     param_grid,
     cv=3,
     scoring='accuracy',
     n_jobs=-1
 )
 grid_search.fit(X_train, y_train)
 
 best_model = grid_search.best_estimator_
 y_pred = best_model.predict(X_test)
 
 
 print("\nClassification Report:\n", classification_report(y_test, y_pred))
 print("Accuracy:", accuracy_score(y_test, y_pred))
 conf_matrix = confusion_matrix(y_test, y_pred)
 plt.figure(figsize=(8, 6))
 sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=['Failed', 'Passed'], yticklabels=['Failed', 'Passed'])
 plt.title('Confusion Matrix')
 plt.xlabel('Predicted')
 plt.ylabel('Actual')
 plt.show()
 cv_scores = cross_val_score(best_model, X_train, y_train, cv=5, scoring='accuracy')
 print("\nCross-Validation Accuracy Scores:", cv_scores)
 print("Average Accuracy:", np.mean(cv_scores))
